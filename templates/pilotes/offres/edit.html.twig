<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>StageConnect - Modifier l'offre</title>
    <link rel="stylesheet" href="{{ asset('css/modal.css') }}">
    <link rel="stylesheet" href="{{ asset('css/styles_page_pilote.css') }}">
</head>
<body>
{% set pilotePage = true %}
{% include 'partials/navbar-pilote.html.twig' %}

{% include 'partials/flash_messages.html.twig' %}

<main>
    <div class="form-container">
        <a href="{{ url('pilotes/offres/' ~ offer.Id_Offre) }}" class="btn-return">
            <span class="arrow">←</span> Retour
        </a>
        <h2 class="form-title">Modifier l'offre de stage</h2>

        <form id="edit-offre-form" method="post" action="{{ url('pilotes/offres/' ~ offer.Id_Offre ~ '/modifier') }}">
            <input type="hidden" name="csrf_token" value="{{ csrf_token }}">

            <div class="form-group">
                <label for="titre">Titre de l'offre *</label>
                <input type="text" id="titre" name="titre" class="form-control" placeholder="Ex: Développeur Full-Stack" value="{{ offer.Titre_Offre }}" required>
                <div id="titre-error" class="error-message">{{ errors.titre|default('') }}</div>
            </div>

            <div class="form-group">
                <label for="description">Description de l'offre *</label>
                <div class="textarea-container">
                    <textarea id="description" name="description" class="form-control" placeholder="Décrivez les missions, responsabilités et objectifs du stage" maxlength="1000" required>{{ offer.Description_Offre }}</textarea>
                    <div class="char-count"><span id="char-count">{{ offer.Description_Offre|length }}</span>/1000</div>
                </div>
                <div id="description-error" class="error-message">{{ errors.description|default('') }}</div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="remuneration">Rémunération mensuelle (€) *</label>
                    <input type="number" id="remuneration" name="remuneration" class="form-control" placeholder="Ex: 600" min="0" step="0.01" value="{{ offer.Remuneration_Offre }}" required>
                    <div id="remuneration-error" class="error-message">{{ errors.remuneration|default('') }}</div>
                </div>

                <div class="form-group">
                    <label for="niveau_etude">Niveau d'étude requis *</label>
                    <select id="niveau_etude" name="niveau_etude" class="form-control" required>
                        <option value="">Sélectionner un niveau</option>
                        <option value="Bac+1" {% if offer.Niveau_Requis_Offre == 'Bac+1' %}selected{% endif %}>Bac+1</option>
                        <option value="Bac+2" {% if offer.Niveau_Requis_Offre == 'Bac+2' %}selected{% endif %}>Bac+2</option>
                        <option value="Bac+3" {% if offer.Niveau_Requis_Offre == 'Bac+3' %}selected{% endif %}>Bac+3</option>
                        <option value="Bac+4" {% if offer.Niveau_Requis_Offre == 'Bac+4' %}selected{% endif %}>Bac+4</option>
                        <option value="Bac+5" {% if offer.Niveau_Requis_Offre == 'Bac+5' %}selected{% endif %}>Bac+5</option>
                    </select>
                    <div id="niveau_etude-error" class="error-message">{{ errors.niveau_etude|default('') }}</div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="date_debut">Date de début *</label>
                    <input type="date" id="date_debut" name="date_debut" class="form-control" value="{{ offer.Date_Debut_Offre|date('Y-m-d') }}" required>
                    <div id="date_debut-error" class="error-message">{{ errors.date_debut|default('') }}</div>
                </div>

                <div class="form-group">
                    <label for="duree_min">Durée minimale (semaines) *</label>
                    <input type="number" id="duree_min" name="duree_min" class="form-control" placeholder="Ex: 8" min="1" value="{{ offer.Duree_Min_Offre }}" required>
                    <div id="duree_min-error" class="error-message">{{ errors.duree_min|default('') }}</div>
                </div>

                <div class="form-group">
                    <label for="duree_max">Durée maximale (semaines)</label>
                    <input type="number" id="duree_max" name="duree_max" class="form-control" placeholder="Ex: 16" min="1" value="{{ offer.Duree_Max_Offre }}">
                    <div id="duree_max-error" class="error-message">{{ errors.duree_max|default('') }}</div>
                </div>
            </div>

            <div class="form-group">
                <label for="competences">Compétences requises</label>
                <div class="skills-dropdown-container">
                    <select id="competences" name="competences[]" class="form-control" multiple>
                        {% for competence in all_competences %}
                            <option value="{{ competence.Id_Competence }}"
                                    {% if competence.Id_Competence in selected_competences %}selected{% endif %}>
                                {{ competence.Nom_Competence }}
                            </option>
                        {% endfor %}
                    </select>
                </div>
                <div class="selected-skills">
                    {% for skill in offer.skills %}
                        <div class="skill-tag">
                            {{ skill.Nom_Competence }}
                            <button type="button" class="remove-skill" data-id="{{ skill.Id_Competence }}">×</button>
                        </div>
                    {% endfor %}
                </div>
                <div id="competences-error" class="error-message">{{ errors.competences|default('') }}</div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="entreprise">Entreprise associée *</label>
                    <select id="entreprise" name="entreprise" class="form-control" required>
                        <option value="">Sélectionner une entreprise</option>
                        {% for entreprise in enterprises %}
                            <option value="{{ entreprise.Id_Entreprise }}"
                                    {% if entreprise.Id_Entreprise == offer.Id_Entreprise %}selected{% endif %}>
                                {{ entreprise.Nom_Entreprise }}
                            </option>
                        {% endfor %}
                    </select>
                    <div id="entreprise-error" class="error-message">{{ errors.entreprise|default('') }}</div>
                </div>

                <div class="form-group">
                    <label for="localisation">Localisation *</label>
                    <input type="text" id="localisation" name="localisation" class="form-control"
                           placeholder="Ex: Paris, 75000"
                           value="{{ offer.Ville_Localisation ~ ', ' ~ offer.Code_Postal_Localisation }}" required>
                    <div id="localisation-error" class="error-message">{{ errors.localisation|default('') }}</div>
                </div>
            </div>

            <div class="form-actions">
                <a href="{{ url('pilotes/offres/' ~ offer.Id_Offre) }}" class="btn btn-back">Annuler</a>
                <button type="submit" id="submit-btn" class="btn btn-submit">Enregistrer les modifications</button>
            </div>
        </form>
    </div>

    <div class="confirmation-popup" id="confirmationPopup" {% if success is defined and success %}style="display: flex;"{% endif %}>
        <div class="popup-content">
            <p>L'offre a bien été modifiée</p>
            <button class="close-popup" onclick="window.location.href='{{ url('pilotes/offres/' ~ offer.Id_Offre) }}'">Fermer</button>
        </div>
    </div>
</main>

{% include 'partials/footer.html.twig' %}
<script src="{{ asset('js/frontend_script.js') }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Compteur de caractères pour la description
        const descriptionTextarea = document.getElementById('description');
        const charCount = document.getElementById('char-count');

        if (descriptionTextarea && charCount) {
            descriptionTextarea.addEventListener('input', function() {
                charCount.textContent = this.value.length;
            });
        }

        // Gestion de la sélection des compétences
        const competencesSelect = document.getElementById('competences');
        const selectedSkillsContainer = document.querySelector('.selected-skills');

        if (competencesSelect && selectedSkillsContainer) {
            // Ajouter de nouvelles compétences sélectionnées
            competencesSelect.addEventListener('change', function() {
                selectedSkillsContainer.innerHTML = '';

                Array.from(this.selectedOptions).forEach(option => {
                    const skillTag = document.createElement('div');
                    skillTag.className = 'skill-tag';
                    skillTag.innerHTML = `
                        ${option.text}
                        <button type="button" class="remove-skill" data-id="${option.value}">×</button>
                    `;
                    selectedSkillsContainer.appendChild(skillTag);
                });

                // Ajouter des événements aux boutons de suppression
                document.querySelectorAll('.remove-skill').forEach(button => {
                    button.addEventListener('click', function() {
                        const skillId = this.getAttribute('data-id');
                        const option = competencesSelect.querySelector(`option[value="${skillId}"]`);
                        if (option) {
                            option.selected = false;
                        }
                        this.parentElement.remove();
                    });
                });
            });

            // Initialiser les événements pour les boutons de suppression existants
            document.querySelectorAll('.remove-skill').forEach(button => {
                button.addEventListener('click', function() {
                    const skillId = this.getAttribute('data-id');
                    const option = competencesSelect.querySelector(`option[value="${skillId}"]`);
                    if (option) {
                        option.selected = false;
                    }
                    this.parentElement.remove();
                });
            });
        }

        // Validation du formulaire
        const form = document.getElementById('edit-offre-form');

        if (form) {
            form.addEventListener('submit', function(e) {
                let isValid = true;

                // Valider les champs requis
                const requiredFields = form.querySelectorAll('[required]');
                requiredFields.forEach(field => {
                    if (!field.value.trim()) {
                        isValid = false;
                        const errorDiv = document.getElementById(`${field.id}-error`);
                        if (errorDiv) {
                            errorDiv.textContent = 'Ce champ est requis';
                        }
                    }
                });

                // Valider la durée maximale vs minimale
                const dureeMin = document.getElementById('duree_min');
                const dureeMax = document.getElementById('duree_max');

                if (dureeMin && dureeMax && dureeMax.value && parseInt(dureeMax.value) < parseInt(dureeMin.value)) {
                    isValid = false;
                    const errorDiv = document.getElementById('duree_max-error');
                    if (errorDiv) {
                        errorDiv.textContent = 'La durée maximale doit être supérieure à la durée minimale';
                    }
                }

                if (!isValid) {
                    e.preventDefault();
                }
            });
        }
    });
</script>
<script src="{{ asset('js/flash-messages.js') }}"></script>
</body>
</html>